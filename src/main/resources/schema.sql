drop table if exists "film" cascade;
CREATE TABLE if not exists "film"
(
    "id"           INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "name"         varchar,
    "description"  varchar,
    "release_date" date,
    "duration"     integer,
    "mpa"          integer
);

drop table if exists "genre" cascade;
CREATE TABLE if not exists "genre"
(
    "id"   INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "name" varchar
);

drop table if exists "mpa" cascade;
CREATE TABLE if not exists "mpa"
(
    "id"   INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "name" varchar
);

drop table if exists "films_genres" cascade;
CREATE TABLE if not exists "films_genres"
(
    "id"       INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "film_id"  integer,
    "genre_id" integer
);

drop table if exists "likes" cascade;
CREATE TABLE if not exists "likes"
(
    "id"      INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "user_id" integer,
    "film_id" integer
);

drop table if exists "user" cascade;
CREATE TABLE if not exists "user"
(
    "id"       INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "email"    varchar,
    "login"    varchar,
    "name"     varchar,
    "birthday" date
);

drop table if exists "users_friends" cascade;
CREATE TABLE if not exists "users_friends"
(
    "id"        INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "user_id"   integer,
    "friend_id" integer
);

ALTER TABLE "films_genres"
    ADD FOREIGN KEY ("film_id") REFERENCES "film" ("id");

ALTER TABLE "films_genres"
    ADD FOREIGN KEY ("genre_id") REFERENCES "genre" ("id");

ALTER TABLE "film"
    ADD FOREIGN KEY ("mpa") REFERENCES "mpa" ("id");

ALTER TABLE "likes"
    ADD FOREIGN KEY ("film_id") REFERENCES "film" ("id");

ALTER TABLE "likes"
    ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "users_friends"
    ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "users_friends"
    ADD FOREIGN KEY ("friend_id") REFERENCES "user" ("id");
